name: E2E CI

on:
  push:
    branches: [main]
    tags: ["v*"]
    paths-ignore:
      - '**.md'
      - "containers/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  cache-version: 1

# CI tests with the Cybozu internal use version plus the latest and one previous MySQL version.
# Other MySQL supported versions tested weekly.
# see: weekly.yaml
#
# NOTE: Current Cybozu internal use version is 8.0.28.
jobs:
  commit-status-start:
    name: Commit status start
    runs-on: ubuntu-22.04
    steps:
      - name: Set pending to commit status
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -f state='pending' \
            -f target_url='${{github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
            -f context='${{ github.workflow }}'
  extract-github-ref:
    name: extract github.ref
    runs-on: ubuntu-22.04
    outputs:
      github_ref: ${{ steps.extract.outputs.github_ref }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract github.ref
        id: extract
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # if exists PR refs/pull/<pull_request_number>/merge
          # if not exists PR â†’ github.ref
          PR_number=$(gh pr view --json number -q .number)
          if [ $? == 0 ];then
            echo "github_ref=refs/pull/${PR_number}/merge" >> $GITHUB_OUTPUT
          else
            echo "github_ref=${{ github.ref }}" >> $GITHUB_OUTPUT
          fi
  dbtest:
    name: Integration tests with MySQL
    needs: extract-github-ref
    strategy:
      matrix:
        mysql-version: ["8.0.28", "8.0.34", "8.0.35"]
    uses: ./.github/workflows/dbtest.yaml
    with:
      mysql-version: ${{ matrix.mysql-version }}
      ref: ${{ needs.extract-github-ref.outputs.github_ref }}

  e2e:
    name: Supported Kubernetes versions End-to-End Tests
    needs: extract-github-ref
    strategy:
      matrix:
        mysql-version: ["8.0.35"]
        k8s-version: ["1.25.9", "1.26.4", "1.27.1"]
    uses: ./.github/workflows/e2e.yaml
    with:
      k8s-version: ${{ matrix.k8s-version }}
      mysql-version: ${{ matrix.mysql-version }}
      ref: ${{ needs.extract-github-ref.outputs.github_ref }}

  e2e-mysql:
    name: Supported MySQL versions End-to-End Tests
    needs: extract-github-ref
    strategy:
      matrix:
        mysql-version: ["8.0.28", "8.0.34", "8.0.35"]
        k8s-version: ["1.27.1"]
    uses: ./.github/workflows/e2e.yaml
    with:
      k8s-version: ${{ matrix.k8s-version }}
      mysql-version: ${{ matrix.mysql-version }}
      ref: ${{ needs.extract-github-ref.outputs.github_ref }}

  upgrade:
    name: Upgrade Test
    needs: extract-github-ref
    runs-on:
      group: moco
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.extract-github-ref.outputs.github_ref }}
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true
      - run: |
          swapon > swapon.txt
          sudo swapoff -a
          cat swapon.txt | tail -n+2 | awk '$2=="file" {print $1}' | sudo xargs --no-run-if-empty rm
      - run: sudo mkdir /mnt/local-path-provisioner0 /mnt/local-path-provisioner1 /mnt/local-path-provisioner2
      - run: make start KIND_CONFIG=kind-config_actions.yaml
        working-directory: e2e
      - run: make test-upgrade
        working-directory: e2e
      - run: make logs
        working-directory: e2e
        if: always()
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: logs-upgrade.tar.gz
          path: e2e/logs.tar.gz
  commit-status-final:
    if: always()
    name: Commit Status Final
    needs:
      - dbtest
      - e2e
      - e2e-mysql
      - upgrade
    runs-on: ubuntu-latest
    steps:
      - name: Get final status
        id: final-status
        run: |
          if "${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped') }}"; then
            echo "result=failure" >> $GITHUB_OUTPUT
          else
            echo "result=success" >> $GITHUB_OUTPUT
          fi
      - name: Set final commit status
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -f state='${{ steps.final-status.outputs.result }}' \
            -f target_url='${{github.server_url}}/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
            -f context='${{ github.workflow }}'
